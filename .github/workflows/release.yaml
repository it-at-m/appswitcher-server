name: release

# Run workflow on commits to the `main` branch
on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to release from ?"
        required: true
        default: "main"
      release-version:
        description: "Release version ?"
        required: true
      release-tag:
        description: "Release tag ?"
        required: true
      development-version:
        description: "Development version ?"
        required: true

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}
      - name: Install Java and Maven
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: "temurin"
      - name: Perform maven release
        if: github.event.inputs.snapshot-build == 'n'
        run: |
          mvn -B release:prepare -Dtag=${{ github.event.inputs.release-tag }} -DreleaseVersion=${{ github.event.inputs.release-version }} -DdevelopmentVersion=${{ github.event.inputs.development-version }} -Darguments="-DskipTests"

  publish-image:
    needs: prepare-release
    runs-on: ubuntu-latest
    steps:
      - name: checkout release tag
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.release-tag }}
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "maven"
      - name: Build with Maven
        run: mvn -B package -DskipTests
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: itatm/appswitcher-server
          tags: |
            type=raw,value=${{ github.event.inputs.release-version }}
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_KEY }}
      - name: Build image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/*.jar
          tag_name: ${{ github.event.inputs.release-tag }}
          draft: false
          prerelease: false
          generate_release_notes: true
